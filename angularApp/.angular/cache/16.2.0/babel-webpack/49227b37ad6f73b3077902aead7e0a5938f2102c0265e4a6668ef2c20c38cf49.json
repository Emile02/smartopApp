{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../interventions.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction InterventionsComponent_tr_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const surgeonsInfo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(surgeonsInfo_r1.surgeon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(surgeonsInfo_r1.speciality);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(surgeonsInfo_r1.totalInterventions);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(surgeonsInfo_r1.anesthsiste);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(surgeonsInfo_r1.nurses);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(surgeonsInfo_r1.preferedRoom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(surgeonsInfo_r1.mostIntervention);\n  }\n}\nexport class InterventionsComponent {\n  constructor(interventionsService) {\n    this.interventionsService = interventionsService;\n    this.interventions = [];\n    this.surgeonsInfos = [];\n    this.itemsToShowStart = 0;\n    this.itemsToShowEnd = 10;\n    this.searchText = '';\n    this.lookingForSurgeon = false;\n  }\n  ngOnInit() {\n    this.getInterventions();\n  }\n  showMoreInterventions() {\n    if (this.itemsToShowEnd < this.surgeonsInfos.length) {\n      this.itemsToShowStart += 10;\n      if (this.itemsToShowStart == 30) this.itemsToShowEnd += 7;else this.itemsToShowEnd += 10;\n    }\n  }\n  showLessInterventions() {\n    if (this.itemsToShowStart > 0) {\n      this.itemsToShowStart -= 10;\n      if (this.itemsToShowStart == 20) this.itemsToShowEnd -= 7;else this.itemsToShowEnd -= 10;\n    }\n  }\n  getInterventions() {\n    this.interventionsService.getInterventions().subscribe(data => {\n      this.interventions = data;\n      const uniqueSurgeons = Array.from(new Set(this.interventions.map(intervention => intervention.surgeon)));\n      this.surgeonsInfos = uniqueSurgeons.map(surgeon => ({\n        surgeon,\n        nurses: this.getMostFrequentNurses(surgeon),\n        speciality: this.interventions.find(intervention => intervention.surgeon === surgeon).specialty,\n        totalInterventions: this.getTotalInterventions(surgeon),\n        anesthsiste: this.getMostFrequentAnesthesiste(surgeon),\n        mostIntervention: this.getMostFrequentIntervention(surgeon),\n        preferedRoom: this.getMostFrequentRoom(surgeon)\n      })).sort((a, b) => b.totalInterventions - a.totalInterventions);\n      ;\n    }, error => {\n      console.error('Error fetching interventions:', error);\n    });\n  }\n  getMostFrequentNurses(surgeonName) {\n    const surgeonInterventions = this.interventions.filter(intervention => intervention.surgeon.toLowerCase() === surgeonName.toLowerCase());\n    const nurseCounts = {};\n    for (const intervention of surgeonInterventions) {\n      const nurse1 = intervention.nurse1;\n      const nurse2 = intervention.nurse2;\n      nurseCounts[nurse1] = (nurseCounts[nurse1] || 0) + 1;\n      nurseCounts[nurse2] = (nurseCounts[nurse2] || 0) + 1;\n    }\n    const mostFrequentNurse = Object.keys(nurseCounts).reduce((a, b) => nurseCounts[a] > nurseCounts[b] ? a : b);\n    return mostFrequentNurse;\n  }\n  getMostFrequentIntervention(surgeonName) {\n    const surgeonInterventions = this.interventions.filter(intervention => intervention.surgeon.toLowerCase() === surgeonName.toLowerCase());\n    const InterventionsCount = {};\n    for (const intervention of surgeonInterventions) {\n      const interventions = intervention.intervention;\n      InterventionsCount[interventions] = (InterventionsCount[interventions] || 0) + 1;\n    }\n    const mostFrequentIntervention = Object.keys(InterventionsCount).reduce((a, b) => InterventionsCount[a] > InterventionsCount[b] ? a : b);\n    return mostFrequentIntervention;\n  }\n  getMostFrequentRoom(surgeonName) {\n    const surgeonInterventions = this.interventions.filter(intervention => intervention.surgeon.toLowerCase() === surgeonName.toLowerCase());\n    const roomCount = {};\n    for (const intervention of surgeonInterventions) {\n      const room = intervention.roomNumber;\n      roomCount[room] = (roomCount[room] || 0) + 1;\n    }\n    const mostFrequentRoom = Object.keys(roomCount).reduce((a, b) => roomCount[a] > roomCount[b] ? a : b);\n    return mostFrequentRoom;\n  }\n  getMostFrequentAnesthesiste(surgeonName) {\n    const surgeonInterventions = this.interventions.filter(intervention => intervention.surgeon.toLowerCase() === surgeonName.toLowerCase());\n    const anesthesisteCount = {};\n    let mostFrequentAnesthsiste = String();\n    for (const intervention of surgeonInterventions) {\n      const anesthsiste = intervention.anesthsiste;\n      if (anesthsiste.length > 0) anesthesisteCount[anesthsiste] = (anesthesisteCount[anesthsiste] || 0) + 1;\n    }\n    if (Object.keys(anesthesisteCount).length === 0) return 'EMPTY';else {\n      return mostFrequentAnesthsiste = Object.keys(anesthesisteCount).reduce((a, b) => anesthesisteCount[a] > anesthesisteCount[b] ? a : b);\n    }\n  }\n  getTotalInterventions(surgeonName) {\n    const surgeonInterventions = this.interventions.filter(intervention => intervention.surgeon.toLowerCase() === surgeonName.toLowerCase());\n    console.log(surg, surgeonInterventions.length);\n    return surgeonInterventions.length;\n  }\n  search() {\n    if (this.searchText.trim() === '') {\n      this.getInterventions();\n      this.lookingForSurgeon = false;\n    } else {\n      this.itemsToShowStart = 0;\n      this.itemsToShowEnd = this.surgeonsInfos.length;\n      this.surgeonsInfos = this.surgeonsInfos.filter(intervention => intervention.surgeon.toLowerCase().includes(this.searchText.toLowerCase()));\n      this.lookingForSurgeon = true;\n      this.itemsToShowStart = 0;\n      this.itemsToShowEnd = 10;\n    }\n  }\n  refresh() {\n    this.getInterventions();\n    this.lookingForSurgeon = false;\n    this.searchText = '';\n  }\n}\n_class = InterventionsComponent;\n_class.ɵfac = function InterventionsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.InterventionsService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-interventions\"]],\n  decls: 35,\n  vars: 9,\n  consts: [[1, \"container\"], [1, \"search-bar\"], [\"type\", \"search\", \"id\", \"site-search\", \"name\", \"q\", \"placeholder\", \"Rechercher un chirurgien\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [\"id\", \"clickButtonEnter\", 1, \"search-button\", 3, \"click\"], [1, \"refresh-button\", 3, \"click\"], [1, \"pagination\"], [1, \"pagination-button\", 3, \"disabled\", \"click\"], [1, \"results\"], [1, \"item-count\"], [1, \"table-container\", \"hover-effect\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function InterventionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function InterventionsComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.searchText = $event;\n      })(\"keyup.enter\", function InterventionsComponent_Template_input_keyup_enter_2_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function InterventionsComponent_Template_button_click_3_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(4, \"Rechercher\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function InterventionsComponent_Template_button_click_5_listener() {\n        return ctx.refresh();\n      });\n      i0.ɵɵtext(6, \"Actualiser\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function InterventionsComponent_Template_button_click_8_listener() {\n        return ctx.showLessInterventions();\n      });\n      i0.ɵɵtext(9, \"Pr\\u00E9c\\u00E9dent\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function InterventionsComponent_Template_button_click_10_listener() {\n        return ctx.showMoreInterventions();\n      });\n      i0.ɵɵtext(11, \"Suivant\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"p\", 8);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"table\")(17, \"thead\")(18, \"tr\")(19, \"th\");\n      i0.ɵɵtext(20, \"Chirurgien\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Sp\\u00E9cialit\\u00E9\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Interventions totales\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Anesth\\u00E9siste le plus fr\\u00E9quent\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\");\n      i0.ɵɵtext(28, \"Infirmi\\u00E8re la plus fr\\u00E9quente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\");\n      i0.ɵɵtext(30, \"Salle pr\\u00E9f\\u00E9r\\u00E9e\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"th\");\n      i0.ɵɵtext(32, \"Intervention la plus r\\u00E9alis\\u00E9e\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"tbody\");\n      i0.ɵɵtemplate(34, InterventionsComponent_tr_34_Template, 15, 7, \"tr\", 10);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", ctx.lookingForSurgeon === true)(\"disabled\", ctx.itemsToShowStart === 0);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.lookingForSurgeon === true)(\"disabled\", ctx.itemsToShowEnd === ctx.surgeonsInfos.length);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate3(\"\", ctx.itemsToShowStart, \" - \", ctx.itemsToShowEnd, \" / \", ctx.surgeonsInfos.length, \"\");\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.surgeonsInfos.slice(ctx.itemsToShowStart, ctx.itemsToShowEnd));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"body[_ngcontent-%COMP%] {\\n    font-family: Arial, sans-serif;\\n  }\\n  \\n  .container[_ngcontent-%COMP%] {\\n    max-width: 1000px;\\n    margin: 0 auto;\\n    padding: 20px;\\n  }\\n  \\n  .search-bar[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: 20px;\\n  }\\n  \\n  #site-search[_ngcontent-%COMP%] {\\n    flex: 1;\\n    padding: 10px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n  }\\n  \\n  .search-button[_ngcontent-%COMP%], .refresh-button[_ngcontent-%COMP%] {\\n    margin-left: 10px;\\n    padding: 10px 20px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n\\n  .search-button[_ngcontent-%COMP%]:hover, .refresh-button[_ngcontent-%COMP%]:hover {\\n    margin-left: 10px;\\n    padding: 10px 20px;\\n    background-color: #243288;\\n    color: #fff;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\\n  \\n  .results[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    padding: 20px;\\n  }\\n  \\n  .item-count[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n  }\\n  \\n  .table-container[_ngcontent-%COMP%] {\\n    overflow-x: auto;\\n  }\\n  \\n  table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n  \\n  th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n    padding: 2px;\\n    border-bottom: 1px solid #ccc;\\n  }\\n  \\n  th[_ngcontent-%COMP%] {\\n    background-color: #f7f7f7;\\n    text-align: left;\\n  }\\n  \\n  .pagination[_ngcontent-%COMP%] {\\n    text-align: center;\\n  }\\n  \\n  .pagination-button[_ngcontent-%COMP%] {\\n    padding: 10px 20px;\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    margin: 0 10px;\\n  }\\n\\n  .pagination-button[_ngcontent-%COMP%]:hover {\\n    padding: 10px 20px;\\n    background-color: #243288;\\n    color: #fff;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    margin: 0 10px;\\n  }\\n  \\n  .pagination-button[_ngcontent-%COMP%]:disabled {\\n    background-color: #ccc;\\n    cursor: not-allowed;\\n  }\\n  \\n  .hover-effect[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\n    background-color: #f0f0f0;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW50ZXJ2ZW50aW9ucy9pbnRlcnZlbnRpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEI7RUFDaEM7O0VBRUE7SUFDRSxpQkFBaUI7SUFDakIsY0FBYztJQUNkLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsT0FBTztJQUNQLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBOztJQUVFLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7RUFDakI7O0VBRUE7O0lBRUUsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsYUFBYTtFQUNmOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0UsV0FBVztJQUNYLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLFlBQVk7SUFDWiw2QkFBNkI7RUFDL0I7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsZ0JBQWdCO0VBQ2xCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsY0FBYztFQUNoQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xuICB9XG4gIFxuICAuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDEwMDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAyMHB4O1xuICB9XG4gIFxuICAuc2VhcmNoLWJhciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbiAgXG4gICNzaXRlLXNlYXJjaCB7XG4gICAgZmxleDogMTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB9XG4gIFxuICAuc2VhcmNoLWJ1dHRvbixcbiAgLnJlZnJlc2gtYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIC5zZWFyY2gtYnV0dG9uOmhvdmVyLFxuICAucmVmcmVzaC1idXR0b246aG92ZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQzMjg4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIFxuICAucmVzdWx0cyB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgcGFkZGluZzogMjBweDtcbiAgfVxuICBcbiAgLml0ZW0tY291bnQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG4gIFxuICAudGFibGUtY29udGFpbmVyIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICB9XG4gIFxuICB0YWJsZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgfVxuICBcbiAgdGgsIHRkIHtcbiAgICBwYWRkaW5nOiAycHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG4gIH1cbiAgXG4gIHRoIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbiAgXG4gIC5wYWdpbmF0aW9uIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5wYWdpbmF0aW9uLWJ1dHRvbiB7XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgbWFyZ2luOiAwIDEwcHg7XG4gIH1cblxuICAucGFnaW5hdGlvbi1idXR0b246aG92ZXIge1xuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQzMjg4O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIG1hcmdpbjogMCAxMHB4O1xuICB9XG4gIFxuICAucGFnaW5hdGlvbi1idXR0b246ZGlzYWJsZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgfVxuICBcbiAgLmhvdmVyLWVmZmVjdCB0Ym9keSB0cjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","surgeonsInfo_r1","surgeon","speciality","totalInterventions","anesthsiste","nurses","preferedRoom","mostIntervention","InterventionsComponent","constructor","interventionsService","interventions","surgeonsInfos","itemsToShowStart","itemsToShowEnd","searchText","lookingForSurgeon","ngOnInit","getInterventions","showMoreInterventions","length","showLessInterventions","subscribe","data","uniqueSurgeons","Array","from","Set","map","intervention","getMostFrequentNurses","find","specialty","getTotalInterventions","getMostFrequentAnesthesiste","getMostFrequentIntervention","getMostFrequentRoom","sort","a","b","error","console","surgeonName","surgeonInterventions","filter","toLowerCase","nurseCounts","nurse1","nurse2","mostFrequentNurse","Object","keys","reduce","InterventionsCount","mostFrequentIntervention","roomCount","room","roomNumber","mostFrequentRoom","anesthesisteCount","mostFrequentAnesthsiste","String","log","surg","search","trim","includes","refresh","ɵɵdirectiveInject","i1","InterventionsService","selectors","decls","vars","consts","template","InterventionsComponent_Template","rf","ctx","ɵɵlistener","InterventionsComponent_Template_input_ngModelChange_2_listener","$event","InterventionsComponent_Template_input_keyup_enter_2_listener","InterventionsComponent_Template_button_click_3_listener","InterventionsComponent_Template_button_click_5_listener","InterventionsComponent_Template_button_click_8_listener","InterventionsComponent_Template_button_click_10_listener","ɵɵtemplate","InterventionsComponent_tr_34_Template","ɵɵproperty","ɵɵtextInterpolate3","slice"],"sources":["/home/emile/Documents/Epitech/Année à l'étranger/smartopApp/angularApp/src/app/interventions/interventions.component.ts","/home/emile/Documents/Epitech/Année à l'étranger/smartopApp/angularApp/src/app/interventions/interventions.component.html"],"sourcesContent":["// interventions.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { InterventionsService } from '../interventions.service';\n\n@Component({\n  selector: 'app-interventions',\n  templateUrl: './interventions.component.html',\n  styleUrls: ['./interventions.component.css']\n})\n\nexport class InterventionsComponent implements OnInit {\n  \n  interventions: any[] = [];\n  surgeonsInfos: any[] = [];\n  \n  itemsToShowStart: number = 0;\n  itemsToShowEnd: number = 10;\n  \n  searchText: string = '';\n  \n  lookingForSurgeon: boolean = false;\n  \n  constructor(private interventionsService: InterventionsService) {}\n\n  ngOnInit(): void {\n    this.getInterventions();\n  }\n\n  showMoreInterventions (): void {\n    if (this.itemsToShowEnd < this.surgeonsInfos.length) {\n      this.itemsToShowStart += 10;\n      if (this.itemsToShowStart == 30)\n      this.itemsToShowEnd += 7;\n      else\n      this.itemsToShowEnd += 10;\n    }\n  }\n  \n  showLessInterventions (): void {\n    if (this.itemsToShowStart > 0) {\n      this.itemsToShowStart -= 10;\n      if (this.itemsToShowStart == 20)\n        this.itemsToShowEnd -= 7;\n        else\n          this.itemsToShowEnd -= 10;\n    }\n  }\n\n  getInterventions(): void {\n    this.interventionsService.getInterventions().subscribe(\n      (data) => {\n        this.interventions = data;\n\n        const uniqueSurgeons = Array.from(new Set(this.interventions.map(intervention => intervention.surgeon)));\n        this.surgeonsInfos = uniqueSurgeons.map(surgeon => ({\n          surgeon,\n          nurses: this.getMostFrequentNurses(surgeon),\n          speciality: this.interventions.find(intervention => intervention.surgeon === surgeon).specialty,\n          totalInterventions: this.getTotalInterventions(surgeon),\n          anesthsiste : this.getMostFrequentAnesthesiste(surgeon),\n          mostIntervention : this.getMostFrequentIntervention(surgeon),\n          preferedRoom : this.getMostFrequentRoom(surgeon)\n        })).sort((a, b) => b.totalInterventions - a.totalInterventions);;\n      },\n      (error) => {\n        console.error('Error fetching interventions:', error);\n      }\n    );\n  }\n\n  getMostFrequentNurses(surgeonName: string): string {\n\n    const surgeonInterventions = this.interventions.filter((intervention) =>\n      intervention.surgeon.toLowerCase() === surgeonName.toLowerCase()\n    );\n  \n    const nurseCounts: { [nurse: string]: number } = {};\n    \n    for (const intervention of surgeonInterventions) {\n      \n      const nurse1 = intervention.nurse1;\n      const nurse2 = intervention.nurse2;\n  \n      nurseCounts[nurse1] = (nurseCounts[nurse1] || 0) + 1;\n      nurseCounts[nurse2] = (nurseCounts[nurse2] || 0) + 1;\n    }\n\n    const mostFrequentNurse = Object.keys(nurseCounts).reduce((a, b) =>\n    nurseCounts[a] > nurseCounts[b] ? a : b\n  );\n    return mostFrequentNurse;\n  }\n\n  getMostFrequentIntervention(surgeonName: string): string {\n\n    const surgeonInterventions = this.interventions.filter((intervention) =>\n      intervention.surgeon.toLowerCase() === surgeonName.toLowerCase()\n    );\n  \n    const InterventionsCount: { [mostIntervention: string]: number } = {};\n    \n    for (const intervention of surgeonInterventions) {\n      \n      const interventions = intervention.intervention;\n  \n      InterventionsCount[interventions] = (InterventionsCount[interventions] || 0) + 1;\n    }\n\n    const mostFrequentIntervention = Object.keys(InterventionsCount).reduce((a, b) =>\n    InterventionsCount[a] > InterventionsCount[b] ? a : b\n  );\n    return mostFrequentIntervention;\n  }\n\n  getMostFrequentRoom(surgeonName: string): string {\n\n    const surgeonInterventions = this.interventions.filter((intervention) =>\n      intervention.surgeon.toLowerCase() === surgeonName.toLowerCase()\n    );\n  \n    const roomCount: { [preferedRoom: string]: number } = {};\n    \n    for (const intervention of surgeonInterventions) {\n      \n      const room = intervention.roomNumber;\n  \n      roomCount[room] = (roomCount[room] || 0) + 1;\n    }\n\n    const mostFrequentRoom = Object.keys(roomCount).reduce((a, b) =>\n    roomCount[a] > roomCount[b] ? a : b\n  );\n    return mostFrequentRoom;\n  }\n\n  getMostFrequentAnesthesiste(surgeonName: string): string {\n    const surgeonInterventions = this.interventions.filter((intervention) =>\n      intervention.surgeon.toLowerCase() === surgeonName.toLowerCase()\n    );\n  \n    const anesthesisteCount: { [anesthsiste: string]: number } = {};\n    let mostFrequentAnesthsiste = String();\n    \n    for (const intervention of surgeonInterventions) {\n      const anesthsiste = intervention.anesthsiste;\n      \n      if (anesthsiste.length > 0)\n        anesthesisteCount[anesthsiste] = (anesthesisteCount[anesthsiste] || 0) + 1;\n    }\n    \n\n    if (Object.keys(anesthesisteCount).length === 0)\n      return 'EMPTY';\n    else {\n      return (\n      mostFrequentAnesthsiste = Object.keys(anesthesisteCount).reduce((a, b) =>\n      anesthesisteCount[a] > anesthesisteCount[b] ? a : b))\n    }\n  }\n\n  getTotalInterventions(surgeonName: string): number {\n    const surgeonInterventions = this.interventions.filter((intervention) =>\n      intervention.surgeon.toLowerCase() === surgeonName.toLowerCase()\n    );\n    console.log(surg,surgeonInterventions.length);\n    return surgeonInterventions.length;\n  }\n\n  search(): void {\n    if (this.searchText.trim() === '') {\n      this.getInterventions();\n      this.lookingForSurgeon = false;\n    } else {\n      this.itemsToShowStart = 0;\n      this.itemsToShowEnd = this.surgeonsInfos.length;\n      this.surgeonsInfos = this.surgeonsInfos.filter(intervention =>\n        intervention.surgeon.toLowerCase().includes(this.searchText.toLowerCase())\n        );\n      this.lookingForSurgeon = true;\n      this.itemsToShowStart = 0;\n      this.itemsToShowEnd = 10;\n    }\n  }\n\n  refresh(): void {\n      this.getInterventions();\n      this.lookingForSurgeon = false;\n      this.searchText = '';\n  }\n}","<div class=\"container\">\n    <div class=\"search-bar\">\n      <input\n        type=\"search\"\n        id=\"site-search\"\n        name=\"q\"\n        placeholder=\"Rechercher un chirurgien\"\n        [(ngModel)]=\"searchText\"\n        (keyup.enter)=\"search()\"\n        />\n      <button id=\"clickButtonEnter\" class=\"search-button\" (click)=\"search()\">Rechercher</button>\n      <button class=\"refresh-button\" (click)=\"refresh()\">Actualiser</button>\n      <div class=\"pagination\">\n        <button class=\"pagination-button\" (click)=\"showLessInterventions()\" [disabled]=\"lookingForSurgeon === true\" [disabled]=\"itemsToShowStart === 0\">Précédent</button>\n        <button class=\"pagination-button\" (click)=\"showMoreInterventions()\" [disabled]=\"lookingForSurgeon === true\" [disabled]=\"itemsToShowEnd === surgeonsInfos.length\">Suivant</button>\n      </div>\n    </div>\n  \n    <div class=\"results\">\n      <p class=\"item-count\">{{ itemsToShowStart }} - {{ itemsToShowEnd }} / {{ surgeonsInfos.length }}</p>\n      \n      <div class=\"table-container hover-effect\">\n        <table>\n          <thead>\n            <tr>\n              <th>Chirurgien</th>\n              <th>Spécialité</th>\n              <th>Interventions totales</th>\n              <th>Anesthésiste le plus fréquent</th>\n              <th>Infirmière la plus fréquente</th>\n              <th>Salle préférée</th>\n              <th>Intervention la plus réalisée</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let surgeonsInfo of surgeonsInfos.slice(itemsToShowStart, itemsToShowEnd)\">\n              <td>{{ surgeonsInfo.surgeon }}</td>\n              <td>{{ surgeonsInfo.speciality }}</td>\n              <td>{{ surgeonsInfo.totalInterventions }}</td>\n              <td>{{ surgeonsInfo.anesthsiste }}</td>\n              <td>{{ surgeonsInfo.nurses }}</td>\n              <td>{{ surgeonsInfo.preferedRoom }}</td>\n              <td>{{ surgeonsInfo.mostIntervention }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}